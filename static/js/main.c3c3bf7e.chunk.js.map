{"version":3,"sources":["components/Dashboard/TransactionHistory/StylesTransaction.module.css","components/Dashboard/Styles.module.css","components/Dashboard/Controls/StylesControls.module.css","components/Dashboard/Balance/StylesBalance.module.css","components/Dashboard/Controls/Controls.jsx","components/Dashboard/Balance/Balance.jsx","components/Dashboard/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Controls","state","amount","handleChange","target","name","value","setState","Number","handleSubmit","e","preventDefault","type","notify","props","balance","onTransaction","msg","toast","error","this","className","styles","controls","onSubmit","label","inputStyles","onChange","buttonStyles","onClick","Component","Balance","income","expenses","role","aria-label","TransactionHistory","items","history","trStyle","map","el","key","id","date","Dashborad","dataInput","typeName","data","shortid","Date","toLocaleString","prevState","Sum","typeTrancaction","filter","reduce","acc","summ","dashboard","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3c3bf7e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"StylesTransaction_history__UTu-S\",\"trStyle\":\"StylesTransaction_trStyle__1ER9K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Styles_dashboard__15WH_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"StylesControls_controls__kp4cQ\",\"label\":\"StylesControls_label__1ezWK\",\"inputStyles\":\"StylesControls_inputStyles__353_M\",\"buttonStyles\":\"StylesControls_buttonStyles__2Q0QY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"StylesBalance_balance__21haT\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './StylesControls.module.css';\n\nexport default class Controls extends Component {\n  static propTypes = {\n    onTransaction: PropTypes.func.isRequired,\n    balance: PropTypes.number.isRequired,\n  };\n\n  state = {\n    amount: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: Number(value),\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const type = e.target.name;\n    if (this.state.amount <= 0) {\n      this.notify('Введите сумму для проведения операции!');\n      return;\n    }\n    if (\n      e.target.name === 'Withdraw' &&\n      this.props.balance < this.state.amount\n    ) {\n      this.notify('На счету недостаточно средств для проведения операции! ');\n      return;\n    }\n    this.props.onTransaction({ ...this.state }, type);\n    this.setState({\n      amount: '',\n    });\n  };\n\n  notify = msg => {\n    toast.error(msg);\n  };\n\n  render() {\n    const { amount } = this.state;\n    return (\n      <section className={styles.controls}>\n        <form onSubmit={this.handleSubmit}>\n          <div className={styles.label}>\n            <input\n              type=\"number\"\n              name=\"amount\"\n              value={amount}\n              className={styles.inputStyles}\n              onChange={this.handleChange}\n            />\n            <button\n              type=\"button\"\n              name=\"Deposit\"\n              className={styles.buttonStyles}\n              onClick={this.handleSubmit}\n            >\n              Deposit\n            </button>\n            <button\n              type=\"button\"\n              name=\"Withdraw\"\n              className={styles.buttonStyles}\n              onClick={this.handleSubmit}\n            >\n              Withdraw\n            </button>\n          </div>\n        </form>\n        <ToastContainer />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './StylesBalance.module.css';\n\nconst Balance = ({ balance, income, expenses }) => (\n  <section className={styles.balance}>\n    <span role=\"img\" aria-label=\"Up\">\n      ⬆️ {income}$\n    </span>\n    <span role=\"img\" aria-label=\"Down\">\n      ⬇️ {expenses}$\n    </span>\n    <span>Balance: {balance}$</span>\n  </section>\n);\n\nBalance.propTypes = {\n  income: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './StylesTransaction.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.history}>\n    <thead>\n      <tr className={styles.trStyle}>\n        <th>Transaction</th>\n        <th>Amount</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(el => (\n        <tr key={el.id}>\n          <td>{el.type}</td>\n          <td>{el.amount} $</td>\n          <td>{el.date}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport styles from './Styles.module.css';\nimport Controls from './Controls/Controls';\nimport Balance from './Balance/Balance';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nexport default class Dashborad extends Component {\n  state = {\n    items: [],\n  };\n\n  onTransaction = (dataInput, typeName) => {\n    const data = {\n      ...dataInput,\n      id: shortid(),\n      date: new Date().toLocaleString(),\n      type: typeName,\n    };\n    this.setState(prevState => ({\n      items: [...prevState.items, data],\n    }));\n  };\n\n  Sum = (items, typeTrancaction) => {\n    return items\n      .filter(el => el.type === typeTrancaction)\n      .reduce((acc, el) => {\n        let summ = acc;\n        summ += el.amount;\n        return summ;\n      }, 0);\n  };\n\n  render() {\n    const { items } = this.state;\n    const income = this.Sum(items, 'Deposit');\n    const expenses = this.Sum(items, 'Withdraw');\n    const balance = income - expenses;\n    return (\n      <div className={styles.dashboard}>\n        <Controls onTransaction={this.onTransaction} balance={balance} />\n        <Balance income={income} expenses={expenses} balance={balance} />\n        {!!items.length && <TransactionHistory items={items} />}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Dashboard from '../Dashboard/Dashboard';\n\nconst App = () => (\n  <>\n    <Dashboard />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}